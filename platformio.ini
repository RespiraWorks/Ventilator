; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
include_dir = controller/include
src_dir = controller/src
test_dir = controller/test
; Make `platformio run` build just env:uno.  We skip env:native for now because
; it doesn't build!
default_envs = uno

[env]
lib_ldf_mode = deep+
lib_extra_dirs = common/libs/

; TODO(jlebar): I'd rather compile as C++17, but when I set that, platformio
; overrides it and still compiles the Arduino code as C++11.  Unclear if the
; AVR compiler even supports C++17.
build_flags = -Icommon/include/ -std=c++11

[env:uno]
platform = atmelavr
board = uno
framework = arduino
lib_deps = 2 ; PID (specified by number to resolve ambiguity)

[env:native]
platform = native
