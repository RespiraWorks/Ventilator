version: 2.1

jobs:
  dead-link-test:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Install & Set up go
          command: |
            sudo apt-get update -qq
            sudo apt-get install git
            sudo apt-get install -y python-dev python3-dev -qq
            if  [ -f goinstall.sh ]; then
                rm goinstall.sh
            fi
            if [ -d ~/.go ]; then
              rm -rf ~/.go
            fi
            wget https://raw.githubusercontent.com/canha/golang-tools-install-script/master/goinstall.sh
            sudo chown circleci goinstall.sh
            sudo chmod +x goinstall.sh
            ./goinstall.sh
      - run:
          name: Install Liche
          command: |
            echo 'export GOROOT=~/.go' >> $BASH_ENV
            echo 'export PATH=$GOROOT/bin:$PATH' >> $BASH_ENV
            echo 'export GOPATH=~/go' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
            echo 'export GO111MODULE="on"' >> $BASH_ENV
            source $BASH_ENV
            go get -u github.com/raviqqe/liche
      - run:
          name: Check for broken links with Liche
          command: |
            git ls-files -z '**/*.md' | xargs -0 liche -d . -x "amazon.com|mouser.com|cypress.com|digikey.com|st.com|rsdelivers.com|platformio.org" -t 30

  common-precommit-checks:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install pre-commit
          command: |
            pip install pre-commit
      - run:
          name: Run pre-commit hooks
          command: |
            merge_base=$(git merge-base -a HEAD origin/master)
            changed_files=$(git diff --name-only $merge_base...HEAD)
            echo "Changed files since branched from origin/master: " $changed_files
            git reset --soft $merge_base
            pre-commit run --show-diff-on-failure --files $changed_files

  controller-tests:
    # See https://circleci.com/docs/2.0/executor-types/#docker-benefits-and-limitations
    # We use a machine executor here because we must run the container in privileged mode.
    # This is because LeakSanitizer, which runs during the build, requires ptrace.
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Build docker image
          command: |
            docker build -f .circleci/controller_tests_Dockerfile -t controller-test-image .
      - run:
          name: Run tests & publish coverage
          command: |
            ci_env=`/bin/bash <(curl -s https://codecov.io/env)`
            docker run $ci_env --privileged -t controller-test-image

  gui-tests:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Checkout submodules
          command: |
            git submodule update --init --recursive
      - run:
          name: Build docker image
          command: |
            docker build -f .circleci/gui_tests_Dockerfile -t gui-test-image .
      - run:
          name: Run tests & publish coverage
          command: |
            ci_env=`/bin/bash <(curl -s https://codecov.io/env)`
            docker run $ci_env --privileged -t gui-test-image

workflows:
  commit:
    jobs:
      - dead-link-test
      - common-precommit-checks
      - controller-tests
      - gui-tests
