/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_DEBUG_PROTOCOL_PB_H_INCLUDED
#define PB_DEBUG_PROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Cmd_Code { 
    Cmd_Code_Mode = 0, 
    Cmd_Code_Peek = 1, 
    Cmd_Code_Poke = 2, 
    Cmd_Code_Console = 3, 
    Cmd_Code_Variable = 4, 
    Cmd_Code_Trace = 5, 
    Cmd_Code_EepromAccess = 6 
} Cmd_Code;

typedef enum _Cmd_SpecialChar { 
    Cmd_SpecialChar_Esc = 241, 
    Cmd_SpecialChar_Term = 242 
} Cmd_SpecialChar;

typedef enum _Cmd_Base { 
    Cmd_Base_DMA1 = 1073872896, 
    Cmd_Base_DMA2 = 1073873920 
} Cmd_Base;

typedef enum _Error_Code { 
    Error_Code_None = 0, 
    Error_Code_CrcError = 1, 
    Error_Code_UnknownCommand = 2, 
    Error_Code_MissingData = 3, 
    Error_Code_NoMemory = 4, 
    Error_Code_InternalError = 5, 
    Error_Code_UnknownVariable = 6, 
    Error_Code_InvalidData = 7, 
    Error_Code_Timeout = 8 
} Error_Code;

typedef enum _TraceCmd_Subcmd { 
    TraceCmd_Subcmd_Flush = 0, 
    TraceCmd_Subcmd_Download = 1, 
    TraceCmd_Subcmd_Start = 2, 
    TraceCmd_Subcmd_GetVarId = 3, 
    TraceCmd_Subcmd_SetVarId = 4, 
    TraceCmd_Subcmd_GetPeriod = 5, 
    TraceCmd_Subcmd_SetPeriod = 6, 
    TraceCmd_Subcmd_CountSamples = 7 
} TraceCmd_Subcmd;

typedef enum _VarAccess_Subcmd { 
    VarAccess_Subcmd_GetInfo = 0, 
    VarAccess_Subcmd_Get = 1, 
    VarAccess_Subcmd_Set = 2, 
    VarAccess_Subcmd_GetCount = 3 
} VarAccess_Subcmd;

typedef enum _EepromCmd_Subcmd { 
    EepromCmd_Subcmd_Read = 0, 
    EepromCmd_Subcmd_Write = 1 
} EepromCmd_Subcmd;

typedef enum _Var_Type { 
    Var_Type_Int32 = 1, 
    Var_Type_UInt32 = 2, 
    Var_Type_Float = 3 
} Var_Type;

typedef enum _Var_Access { 
    Var_Access_ReadOnly = 0, 
    Var_Access_ReadWrite = 1 
} Var_Access;

typedef enum _ControllerDbg_Mode { 
    ControllerDbg_Mode_Normal = 0, 
    ControllerDbg_Mode_Boot = 1 
} ControllerDbg_Mode;

/* Struct definitions */
/* Command codes sent from the python debugging interface to
 the microcontroller's debugging interface */
typedef struct _Cmd { 
    char dummy_field;
} Cmd;

typedef struct _ControllerDbg { 
    char dummy_field;
} ControllerDbg;

/* EEPROM commands sent from the host to the microcontroller */
typedef struct _EepromCmd { 
    char dummy_field;
} EepromCmd;

/* Error codes sent from the microcontroller debugging interface
 back to the python debugging interface */
typedef struct _Error { 
    char dummy_field;
} Error;

typedef struct _Var { 
    char dummy_field;
} Var;

/* Variable access subcommands sent from the host to the microcontroller */
typedef struct _VarAccess { 
    char dummy_field;
} VarAccess;

/* Trace subcommands sent from the host to the microcontroller */
typedef struct _TraceCmd { 
    bool has_MaxTraceVars;
    uint32_t MaxTraceVars; 
} TraceCmd;


/* Helper constants for enums */
#define _Cmd_Code_MIN Cmd_Code_Mode
#define _Cmd_Code_MAX Cmd_Code_EepromAccess
#define _Cmd_Code_ARRAYSIZE ((Cmd_Code)(Cmd_Code_EepromAccess+1))

#define _Cmd_SpecialChar_MIN Cmd_SpecialChar_Esc
#define _Cmd_SpecialChar_MAX Cmd_SpecialChar_Term
#define _Cmd_SpecialChar_ARRAYSIZE ((Cmd_SpecialChar)(Cmd_SpecialChar_Term+1))

#define _Cmd_Base_MIN Cmd_Base_DMA1
#define _Cmd_Base_MAX Cmd_Base_DMA2
#define _Cmd_Base_ARRAYSIZE ((Cmd_Base)(Cmd_Base_DMA2+1))

#define _Error_Code_MIN Error_Code_None
#define _Error_Code_MAX Error_Code_Timeout
#define _Error_Code_ARRAYSIZE ((Error_Code)(Error_Code_Timeout+1))

#define _TraceCmd_Subcmd_MIN TraceCmd_Subcmd_Flush
#define _TraceCmd_Subcmd_MAX TraceCmd_Subcmd_CountSamples
#define _TraceCmd_Subcmd_ARRAYSIZE ((TraceCmd_Subcmd)(TraceCmd_Subcmd_CountSamples+1))

#define _VarAccess_Subcmd_MIN VarAccess_Subcmd_GetInfo
#define _VarAccess_Subcmd_MAX VarAccess_Subcmd_GetCount
#define _VarAccess_Subcmd_ARRAYSIZE ((VarAccess_Subcmd)(VarAccess_Subcmd_GetCount+1))

#define _EepromCmd_Subcmd_MIN EepromCmd_Subcmd_Read
#define _EepromCmd_Subcmd_MAX EepromCmd_Subcmd_Write
#define _EepromCmd_Subcmd_ARRAYSIZE ((EepromCmd_Subcmd)(EepromCmd_Subcmd_Write+1))

#define _Var_Type_MIN Var_Type_Int32
#define _Var_Type_MAX Var_Type_Float
#define _Var_Type_ARRAYSIZE ((Var_Type)(Var_Type_Float+1))

#define _Var_Access_MIN Var_Access_ReadOnly
#define _Var_Access_MAX Var_Access_ReadWrite
#define _Var_Access_ARRAYSIZE ((Var_Access)(Var_Access_ReadWrite+1))

#define _ControllerDbg_Mode_MIN ControllerDbg_Mode_Normal
#define _ControllerDbg_Mode_MAX ControllerDbg_Mode_Boot
#define _ControllerDbg_Mode_ARRAYSIZE ((ControllerDbg_Mode)(ControllerDbg_Mode_Boot+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Cmd_init_default                         {0}
#define Error_init_default                       {0}
#define TraceCmd_init_default                    {false, 4u}
#define VarAccess_init_default                   {0}
#define EepromCmd_init_default                   {0}
#define Var_init_default                         {0}
#define ControllerDbg_init_default               {0}
#define Cmd_init_zero                            {0}
#define Error_init_zero                          {0}
#define TraceCmd_init_zero                       {false, 0}
#define VarAccess_init_zero                      {0}
#define EepromCmd_init_zero                      {0}
#define Var_init_zero                            {0}
#define ControllerDbg_init_zero                  {0}

/* Field tags (for use in manual encoding/decoding) */
#define TraceCmd_MaxTraceVars_tag                1

/* Struct field encoding specification for nanopb */
#define Cmd_FIELDLIST(X, a) \

#define Cmd_CALLBACK NULL
#define Cmd_DEFAULT NULL

#define Error_FIELDLIST(X, a) \

#define Error_CALLBACK NULL
#define Error_DEFAULT NULL

#define TraceCmd_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   MaxTraceVars,      1)
#define TraceCmd_CALLBACK NULL
#define TraceCmd_DEFAULT (const pb_byte_t*)"\x08\x04\x00"

#define VarAccess_FIELDLIST(X, a) \

#define VarAccess_CALLBACK NULL
#define VarAccess_DEFAULT NULL

#define EepromCmd_FIELDLIST(X, a) \

#define EepromCmd_CALLBACK NULL
#define EepromCmd_DEFAULT NULL

#define Var_FIELDLIST(X, a) \

#define Var_CALLBACK NULL
#define Var_DEFAULT NULL

#define ControllerDbg_FIELDLIST(X, a) \

#define ControllerDbg_CALLBACK NULL
#define ControllerDbg_DEFAULT NULL

extern const pb_msgdesc_t Cmd_msg;
extern const pb_msgdesc_t Error_msg;
extern const pb_msgdesc_t TraceCmd_msg;
extern const pb_msgdesc_t VarAccess_msg;
extern const pb_msgdesc_t EepromCmd_msg;
extern const pb_msgdesc_t Var_msg;
extern const pb_msgdesc_t ControllerDbg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Cmd_fields &Cmd_msg
#define Error_fields &Error_msg
#define TraceCmd_fields &TraceCmd_msg
#define VarAccess_fields &VarAccess_msg
#define EepromCmd_fields &EepromCmd_msg
#define Var_fields &Var_msg
#define ControllerDbg_fields &ControllerDbg_msg

/* Maximum encoded size of messages (where known) */
#define Cmd_size                                 0
#define ControllerDbg_size                       0
#define EepromCmd_size                           0
#define Error_size                               0
#define TraceCmd_size                            6
#define VarAccess_size                           0
#define Var_size                                 0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
