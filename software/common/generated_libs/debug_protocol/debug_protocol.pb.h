/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_DEBUG_PROTOCOL_DEBUG_PROTOCOL_PB_H_INCLUDED
#define PB_DEBUG_PROTOCOL_DEBUG_PROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _debug_protocol_Command_Code { 
    debug_protocol_Command_Code_Mode = 0, 
    debug_protocol_Command_Code_Peek = 1, 
    debug_protocol_Command_Code_Poke = 2, 
    debug_protocol_Command_Code_Console = 3, 
    debug_protocol_Command_Code_Variable = 4, 
    debug_protocol_Command_Code_Trace = 5, 
    debug_protocol_Command_Code_EepromAccess = 6 
} debug_protocol_Command_Code;

typedef enum _debug_protocol_Error_Code { 
    debug_protocol_Error_Code_None = 0, 
    debug_protocol_Error_Code_CrcError = 1, 
    debug_protocol_Error_Code_UnknownCommand = 2, 
    debug_protocol_Error_Code_MissingData = 3, 
    debug_protocol_Error_Code_NoMemory = 4, 
    debug_protocol_Error_Code_InternalError = 5, 
    debug_protocol_Error_Code_UnknownVariable = 6, 
    debug_protocol_Error_Code_InvalidData = 7, 
    debug_protocol_Error_Code_Timeout = 8 
} debug_protocol_Error_Code;

typedef enum _debug_protocol_Trace_Subcommand { 
    debug_protocol_Trace_Subcommand_Flush = 0, 
    debug_protocol_Trace_Subcommand_Download = 1, 
    debug_protocol_Trace_Subcommand_Start = 2, 
    debug_protocol_Trace_Subcommand_GetVarId = 3, 
    debug_protocol_Trace_Subcommand_SetVarId = 4, 
    debug_protocol_Trace_Subcommand_GetPeriod = 5, 
    debug_protocol_Trace_Subcommand_SetPeriod = 6, 
    debug_protocol_Trace_Subcommand_CountSamples = 7 
} debug_protocol_Trace_Subcommand;

typedef enum _debug_protocol_VariableAccess_Subcommand { 
    debug_protocol_VariableAccess_Subcommand_GetInfo = 0, 
    debug_protocol_VariableAccess_Subcommand_Get = 1, 
    debug_protocol_VariableAccess_Subcommand_Set = 2 
} debug_protocol_VariableAccess_Subcommand;

typedef enum _debug_protocol_EepromCommand_Subcommand { 
    debug_protocol_EepromCommand_Subcommand_Read = 0, 
    debug_protocol_EepromCommand_Subcommand_Write = 1 
} debug_protocol_EepromCommand_Subcommand;

/* Struct definitions */
/* Command codes sent from the python debugging interface to
 the microcontroller's debugging interface */
typedef struct _debug_protocol_Command { 
    char dummy_field;
} debug_protocol_Command;

/* EEPROM commands sent from the host to the microcontroller */
typedef struct _debug_protocol_EepromCommand { 
    char dummy_field;
} debug_protocol_EepromCommand;

/* Error codes sent from the microcontroller debugging interface
 back to the python debugging interface */
typedef struct _debug_protocol_Error { 
    char dummy_field;
} debug_protocol_Error;

/* Trace subcommands sent from the host to the microcontroller */
typedef struct _debug_protocol_Trace { 
    char dummy_field;
} debug_protocol_Trace;

/* Variable access subcommands sent from the host to the microcontroller */
typedef struct _debug_protocol_VariableAccess { 
    char dummy_field;
} debug_protocol_VariableAccess;


/* Helper constants for enums */
#define _debug_protocol_Command_Code_MIN debug_protocol_Command_Code_Mode
#define _debug_protocol_Command_Code_MAX debug_protocol_Command_Code_EepromAccess
#define _debug_protocol_Command_Code_ARRAYSIZE ((debug_protocol_Command_Code)(debug_protocol_Command_Code_EepromAccess+1))

#define _debug_protocol_Error_Code_MIN debug_protocol_Error_Code_None
#define _debug_protocol_Error_Code_MAX debug_protocol_Error_Code_Timeout
#define _debug_protocol_Error_Code_ARRAYSIZE ((debug_protocol_Error_Code)(debug_protocol_Error_Code_Timeout+1))

#define _debug_protocol_Trace_Subcommand_MIN debug_protocol_Trace_Subcommand_Flush
#define _debug_protocol_Trace_Subcommand_MAX debug_protocol_Trace_Subcommand_CountSamples
#define _debug_protocol_Trace_Subcommand_ARRAYSIZE ((debug_protocol_Trace_Subcommand)(debug_protocol_Trace_Subcommand_CountSamples+1))

#define _debug_protocol_VariableAccess_Subcommand_MIN debug_protocol_VariableAccess_Subcommand_GetInfo
#define _debug_protocol_VariableAccess_Subcommand_MAX debug_protocol_VariableAccess_Subcommand_Set
#define _debug_protocol_VariableAccess_Subcommand_ARRAYSIZE ((debug_protocol_VariableAccess_Subcommand)(debug_protocol_VariableAccess_Subcommand_Set+1))

#define _debug_protocol_EepromCommand_Subcommand_MIN debug_protocol_EepromCommand_Subcommand_Read
#define _debug_protocol_EepromCommand_Subcommand_MAX debug_protocol_EepromCommand_Subcommand_Write
#define _debug_protocol_EepromCommand_Subcommand_ARRAYSIZE ((debug_protocol_EepromCommand_Subcommand)(debug_protocol_EepromCommand_Subcommand_Write+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define debug_protocol_Command_init_default      {0}
#define debug_protocol_Error_init_default        {0}
#define debug_protocol_Trace_init_default        {0}
#define debug_protocol_VariableAccess_init_default {0}
#define debug_protocol_EepromCommand_init_default {0}
#define debug_protocol_Command_init_zero         {0}
#define debug_protocol_Error_init_zero           {0}
#define debug_protocol_Trace_init_zero           {0}
#define debug_protocol_VariableAccess_init_zero  {0}
#define debug_protocol_EepromCommand_init_zero   {0}

/* Field tags (for use in manual encoding/decoding) */

/* Struct field encoding specification for nanopb */
#define debug_protocol_Command_FIELDLIST(X, a) \

#define debug_protocol_Command_CALLBACK NULL
#define debug_protocol_Command_DEFAULT NULL

#define debug_protocol_Error_FIELDLIST(X, a) \

#define debug_protocol_Error_CALLBACK NULL
#define debug_protocol_Error_DEFAULT NULL

#define debug_protocol_Trace_FIELDLIST(X, a) \

#define debug_protocol_Trace_CALLBACK NULL
#define debug_protocol_Trace_DEFAULT NULL

#define debug_protocol_VariableAccess_FIELDLIST(X, a) \

#define debug_protocol_VariableAccess_CALLBACK NULL
#define debug_protocol_VariableAccess_DEFAULT NULL

#define debug_protocol_EepromCommand_FIELDLIST(X, a) \

#define debug_protocol_EepromCommand_CALLBACK NULL
#define debug_protocol_EepromCommand_DEFAULT NULL

extern const pb_msgdesc_t debug_protocol_Command_msg;
extern const pb_msgdesc_t debug_protocol_Error_msg;
extern const pb_msgdesc_t debug_protocol_Trace_msg;
extern const pb_msgdesc_t debug_protocol_VariableAccess_msg;
extern const pb_msgdesc_t debug_protocol_EepromCommand_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define debug_protocol_Command_fields &debug_protocol_Command_msg
#define debug_protocol_Error_fields &debug_protocol_Error_msg
#define debug_protocol_Trace_fields &debug_protocol_Trace_msg
#define debug_protocol_VariableAccess_fields &debug_protocol_VariableAccess_msg
#define debug_protocol_EepromCommand_fields &debug_protocol_EepromCommand_msg

/* Maximum encoded size of messages (where known) */
#define debug_protocol_Command_size              0
#define debug_protocol_EepromCommand_size        0
#define debug_protocol_Error_size                0
#define debug_protocol_Trace_size                0
#define debug_protocol_VariableAccess_size       0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
