syntax = "proto2";


enum ControllerMsgType 
{
    ACK = 			0x10;
    ERR_CHECK_SUM = 0x11;
    ERR_MODE = 		0x12;
    ERR_CMD = 		0x13;
    STATUS = 		0x20;
    ALARM = 		0x30;
    DATA = 			0x40;
}

enum CommandType
{
	SET_RR = 0x00;
	GET_RR = 0x01;
	SET_TV = 0x02;
	GET_TV = 0x03;
	SET_PEEP = 0x04;
	GET_PEEP = 0x05;
	SET_PIP = 0x06;
	GET_PIP = 0x07;
	SET_DWELL = 0x08;
	GET_DWELL = 0x09;
	SET_IR = 0x0a;
	GET_IR = 0x0b;
	
	GET_PRESSURE = 0x0c;
	GET_FLOW = 0x0d;
	GET_VOLUME = 0x0e;

	SET_KP = 0x20;
	GET_KP = 0x21;
	SET_KI = 0x22;
	GET_KI = 0x23;
	SET_KD = 0x24;
	GET_KD = 0x25;
	SET_BLOWER = 0x26;
	RESET = 0x27;
	SET_SOLENOID = 0x28;

	SET_TX_RATE = 0x40;
	GET_TX_RATE = 0x41;
	SET_CONTROLLER_MODE = 0x42;
	GET_CONTROLLER_MODE = 0x43;
	COMM_CHECK = 0x44;
	SET_VENTILATOR_MODE = 0x45;
	GET_VENTILATOR_MODE = 0x46;
	START_VENTILATOR = 0x47;
	STOP_VENTILATOR = 0x48;
	NONE = 0xFF;
}

message Command
{
    required CommandType cmd = 1;
    optional float data = 2;
}

message GuiAck
{
	required uint32 type = 1;
}

message ControllerStatus
{
	required uint64  time = 1;
	required float pressure = 2;
	required float volume = 3;
	required float flow = 4;
	optional uint32 alarm_flags = 5;
}

message ControllerIdentification
{
	required uint64  time = 1;
	required uint32 version_fw = 2;
	required uint32 version_hw = 3;
	optional string about = 4;
}


enum AlarmType 
{
	TO_BE_DEFINED = 0;
}

enum AlarmLevelType 
{
	LOW = 0;
	MEDIUM = 1;
	HIGH = 2;
}

message ControlerAlarm
{
	required AlarmLevelType level = 1;
	required AlarmType type = 2;
	optional string description = 3; //to be defined better 
}

message ControllerValue
{
	optional float value = 1; 
}

message ControllerData
{
	required ControllerMsgType msg_type = 1;
	required CommandType response_to_cmd = 2;

	oneof payload {
		ControllerStatus status = 3;
		ControllerIdentification identification = 4;
		ControllerValue value = 5;
		ControlerAlarm alert = 6;
	}
}

message Packet
{
	oneof payload {
	    Command cmd = 1;
	    GuiAck gui_ack = 2;
	    ControllerData data = 3;
	}
}

