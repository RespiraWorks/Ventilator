# Copyright 2020-2021, RespiraWorks
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = native
src_dir = ./

[env]
lib_extra_dirs =
  libs
  generated_libs
  third_party
; TODO(jkff) It might be possible to use C++17 instead of gnu++17, but
; I hit some build errors, they didn't look too bad but with gnu++17
; they aren't there at all.
build_flags =
  -std=gnu++17
  -fno-exceptions
  -Wall
  -Werror
  -Wconversion
  -Wno-sign-conversion
  -Wno-sign-compare
build_unflags =
  -std=gnu++11
  -std=gnu++14
  -fpermissive
# Use a more recent GCC than default; some designated-initializer features are
# missing in platformio's default version.  The version named below corresponds
# to gcc 9.2.1 20191025.
#
# All versions are listed at
# https://bintray.com/platformio/dl-packages/toolchain-gccarmnoneeabi
platform_packages = toolchain-gccarmnoneeabi@>1.80301.190214

check_tool = cppcheck, clangtidy
check_flags =
  ; quieting missingIncludeSystem (which is not an error in our code), unusedFunction (which is true of all interrupt-called functions)
  ; and unmatchedSuppression (which would otherwise trigger for every file where one of the suppressed messages isn't present)
  ; This helps with output readability.
  cppcheck: --enable=all --std=c++17 --suppress=missingIncludeSystem --suppress=unmatchedSuppression --suppress=unusedFunction
  ; The actual checks are defined in .clang-tidy.
  clangtidy: --checks='-*' --extra-arg-before=-xc++ --extra-arg-before=-std=c++17 --extra-arg-before=-Wno-pragma-once-outside-header
check_patterns =
  libs
  ; Do not include test_libs
  ; Do not include generated_libs
  ; Do not include third_party

[env:native]
platform = native
lib_extra_dirs =
  ${env.lib_extra_dirs}
  ../common/test_libs
; googletest requires pthread.
build_flags =
  ${env.build_flags}
  -pthread
  -g
  --coverage
  -lgcov
lib_deps =
; using v1.10 because v1.11 broke our unit tests:
; https://community.platformio.org/t/googletest-v1-11-build-fail-on-native/27662
  googletest@1.10
; This is needed for the googletest lib_dep to work.  I don't understand why.
; https://community.platformio.org/t/gtest-not-working-on-pio-4-1/10465/7
lib_compat_mode = off
;extra_scripts =
;  platformio/build_config/platformio_sanitizers.py
src_filter = +<src/>
